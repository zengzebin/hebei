!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){function t(e,t){e.addClass("tree-selected"),"item"===e.data("type")&&t.hasClass("fueluxicon-bullet")&&t.removeClass("fueluxicon-bullet").addClass("glyphicon-ok")}function n(e,t){e.removeClass("tree-selected"),"item"===e.data("type")&&t.hasClass("glyphicon-ok")&&t.removeClass("glyphicon-ok").addClass("fueluxicon-bullet")}function l(l,r,o){e.each(o.$elements,function(t,n){var l=e(n);l[0]!==r.$element[0]&&o.dataForEvent.push(e(l).data())}),r.$element.hasClass("tree-selected")?(n(r.$element,r.$icon),o.eventType="deselected"):(t(r.$element,r.$icon),o.eventType="selected",o.dataForEvent.push(r.elementData))}function r(e,l,r){if(r.$elements[0]!==l.$element[0]){e.deselectAll(e.$element);t(l.$element,l.$icon),r.eventType="selected",r.dataForEvent=[l.elementData]}else n(l.$element,l.$icon),r.eventType="deselected",r.dataForEvent=[]}var o=e.fn.tree,a=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.tree.defaults,n),this.options.itemSelect&&this.$element.on("click.fu.tree",".tree-item",e.proxy(function(e){this.selectItem(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-branch-name",e.proxy(function(e){this.toggleFolder(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-overflow",e.proxy(function(t){this.populate(e(t.currentTarget))},this)),this.options.folderSelect&&(this.$element.addClass("tree-folder-select"),this.$element.off("click.fu.tree",".tree-branch-name"),this.$element.on("click.fu.tree",".icon-caret",e.proxy(function(t){this.toggleFolder(e(t.currentTarget).parent())},this)),this.$element.on("click.fu.tree",".tree-branch-name",e.proxy(function(t){this.selectFolder(e(t.currentTarget))},this))),this.render()};a.prototype={constructor:a,deselectAll:function(t){t=t||this.$element;var l=e(t).find(".tree-selected");return l.each(function(t,l){n(e(l),e(l).find(".glyphicon"))}),l},destroy:function(){return this.$element.find("li:not([data-template])").remove(),this.$element.remove(),this.$element[0].outerHTML},render:function(){this.populate(this.$element)},populate:function(t,n){var l=this,r=t.hasClass("tree-overflow"),o=t.hasClass("tree")?t:t.parent(),a=o.hasClass("tree");r&&!a&&(o=o.parent());var i=o.data();r&&(i.overflow=t.data()),n=n||!1,r&&(a?t.replaceWith(o.find("> .tree-loader").remove()):t.remove());var s=o.find(".tree-loader:last");!1===n&&s.removeClass("hide hidden"),this.options.dataSource(i||{},function(t){e.each(t.data,function(t,n){var r;"folder"===n.type?(r=l.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),r.data(n),r.find(".tree-branch-name > .tree-label").html(n.text||n.name)):"item"===n.type?(r=l.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),r.find(".tree-item-name > .tree-label").html(n.text||n.name),r.data(n)):"overflow"===n.type&&(r=l.$element.find("[data-template=treeoverflow]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),r.find(".tree-overflow-name > .tree-label").html(n.text||n.name),r.data(n));var i=n.attr||n.dataAttributes||[];e.each(i,function(e,t){switch(e){case"cssClass":case"class":case"className":r.addClass(t);break;case"data-icon":r.find(".icon-item").removeClass().addClass("icon-item "+t),r.attr(e,t);break;case"id":r.attr(e,t),r.attr("aria-labelledby",t+"-label"),r.find(".tree-branch-name > .tree-label").attr("id",t+"-label");break;default:r.attr(e,t)}}),a?o.append(r):o.find(".tree-branch-children:eq(0)").append(r)}),o.find(".tree-loader").addClass("hidden"),l.$element.trigger("loaded.fu.tree",o)})},selectTreeNode:function(t,n){var o={};o.$element=e(t);var a={};a.$elements=this.$element.find(".tree-selected"),a.dataForEvent=[],"folder"===n?(o.$element=o.$element.closest(".tree-branch"),o.$icon=o.$element.find(".icon-folder")):o.$icon=o.$element.find(".icon-item"),o.elementData=o.$element.data(),this.options.multiSelect?l(this,o,a):r(this,o,a),this.$element.trigger(a.eventType+".fu.tree",{target:o.elementData,selected:a.dataForEvent}),o.$element.trigger("updated.fu.tree",{selected:a.dataForEvent,item:o.$element,eventType:a.eventType})},discloseFolder:function(t){var n=e(t),l=n.closest(".tree-branch"),r=l.find(".tree-branch-children"),o=r.eq(0);l.addClass("tree-open"),l.attr("aria-expanded","true"),o.removeClass("hide hidden"),l.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-close").addClass("glyphicon-folder-open"),r.children().length||this.populate(r),this.$element.trigger("disclosedFolder.fu.tree",l.data())},closeFolder:function(t){var n=e(t),l=n.closest(".tree-branch"),r=l.find(".tree-branch-children"),o=r.eq(0);l.removeClass("tree-open"),l.attr("aria-expanded","false"),o.addClass("hidden"),l.find("> .tree-branch-header .icon-folder").eq(0).removeClass("glyphicon-folder-open").addClass("glyphicon-folder-close"),this.options.cacheItems||o.empty(),this.$element.trigger("closed.fu.tree",l.data())},toggleFolder:function(t){var n=e(t);n.find(".glyphicon-folder-close").length?this.discloseFolder(t):n.find(".glyphicon-folder-open").length&&this.closeFolder(t)},selectFolder:function(e){this.options.folderSelect&&this.selectTreeNode(e,"folder")},selectItem:function(e){this.options.itemSelect&&this.selectTreeNode(e,"item")},selectedItems:function(){var t=this.$element.find(".tree-selected"),n=[];return e.each(t,function(t,l){n.push(e(l).data())}),n},collapse:function(){var e=this,t=[],n=function n(l,r){t.push(r),0===e.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").length&&(e.$element.trigger("closedAll.fu.tree",{tree:e.$element,reportedClosed:t}),e.$element.off("loaded.fu.tree",e.$element,n))};e.$element.on("closed.fu.tree",n),e.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").each(function(){e.closeFolder(this)})},discloseVisible:function(){var t=this,n=t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')"),l=[],r=function e(r,o){l.push(o),l.length===n.length&&(t.$element.trigger("disclosedVisible.fu.tree",{tree:t.$element,reportedOpened:l}),t.$element.off("loaded.fu.tree",t.$element,e))};t.$element.on("loaded.fu.tree",r),t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").each(function(){t.discloseFolder(e(this).find(".tree-branch-header"))})},discloseAll:function(){var e=this;void 0===e.$element.data("disclosures")&&e.$element.data("disclosures",0);var t=e.options.disclosuresUpperLimit>=1&&e.$element.data("disclosures")>=e.options.disclosuresUpperLimit;if(0===e.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").length)e.$element.trigger("disclosedAll.fu.tree",{tree:e.$element,disclosures:e.$element.data("disclosures")}),e.options.cacheItems||e.$element.one("closeAll.fu.tree",function(){e.$element.data("disclosures",0)});else{if(t&&(e.$element.trigger("exceededDisclosuresLimit.fu.tree",{tree:e.$element,disclosures:e.$element.data("disclosures")}),!e.$element.data("ignore-disclosures-limit")))return;e.$element.data("disclosures",e.$element.data("disclosures")+1),e.$element.one("disclosedVisible.fu.tree",function(){e.discloseAll()}),e.discloseVisible()}},refreshFolder:function(e){var t=e.closest(".tree-branch"),n=t.find(".tree-branch-children");n.eq(0).empty(),t.hasClass("tree-open")?this.populate(n,!1):this.populate(n,!0),this.$element.trigger("refreshedFolder.fu.tree",t.data())}},a.prototype.closeAll=a.prototype.collapse,a.prototype.openFolder=a.prototype.discloseFolder,a.prototype.getValue=a.prototype.selectedItems,e.fn.tree=function(t){var n,l=Array.prototype.slice.call(arguments,1),r=this.each(function(){var r=e(this),o=r.data("fu.tree"),i="object"==typeof t&&t;o||r.data("fu.tree",o=new a(this,i)),"string"==typeof t&&(n=o[t].apply(o,l))});return void 0===n?r:n},e.fn.tree.defaults={dataSource:function(e,t){},multiSelect:!1,cacheItems:!0,folderSelect:!0,itemSelect:!0,disclosuresUpperLimit:0},e.fn.tree.Constructor=a,e.fn.tree.noConflict=function(){return e.fn.tree=o,this}});